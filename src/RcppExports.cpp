// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// benchmark_calc_cov
double benchmark_calc_cov(Rcpp::List model, arma::mat d, arma::vec p, int n, bool gpu);
RcppExport SEXP RcppGP_benchmark_calc_cov(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP, SEXP nSEXP, SEXP gpuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type gpu(gpuSEXP);
    __result = Rcpp::wrap(benchmark_calc_cov(model, d, p, n, gpu));
    return __result;
END_RCPP
}
// benchmark_calc_inv_cov
double benchmark_calc_inv_cov(Rcpp::List model, arma::mat d, arma::vec p, int n, bool gpu);
RcppExport SEXP RcppGP_benchmark_calc_inv_cov(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP, SEXP nSEXP, SEXP gpuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type gpu(gpuSEXP);
    __result = Rcpp::wrap(benchmark_calc_inv_cov(model, d, p, n, gpu));
    return __result;
END_RCPP
}
// benchmark_calc_chol_cov
double benchmark_calc_chol_cov(Rcpp::List model, arma::mat d, arma::vec p, int n, bool gpu);
RcppExport SEXP RcppGP_benchmark_calc_chol_cov(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP, SEXP nSEXP, SEXP gpuSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    Rcpp::traits::input_parameter< int >::type n(nSEXP);
    Rcpp::traits::input_parameter< bool >::type gpu(gpuSEXP);
    __result = Rcpp::wrap(benchmark_calc_chol_cov(model, d, p, n, gpu));
    return __result;
END_RCPP
}
// valid_cov_funcs
std::vector<std::string> valid_cov_funcs();
RcppExport SEXP RcppGP_valid_cov_funcs() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(valid_cov_funcs());
    return __result;
END_RCPP
}
// valid_nparams
int valid_nparams(std::string func_r);
RcppExport SEXP RcppGP_valid_nparams(SEXP func_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< std::string >::type func_r(func_rSEXP);
    __result = Rcpp::wrap(valid_nparams(func_r));
    return __result;
END_RCPP
}
// euclid
arma::mat euclid(arma::mat X, arma::mat Y);
RcppExport SEXP RcppGP_euclid(SEXP XSEXP, SEXP YSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type Y(YSEXP);
    __result = Rcpp::wrap(euclid(X, Y));
    return __result;
END_RCPP
}
// euclid_sym
arma::mat euclid_sym(arma::mat X);
RcppExport SEXP RcppGP_euclid_sym(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    __result = Rcpp::wrap(euclid_sym(X));
    return __result;
END_RCPP
}
// init
void init(bool verbose);
RcppExport SEXP RcppGP_init(SEXP verboseSEXP) {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    init(verbose);
    return R_NilValue;
END_RCPP
}
// finalize
void finalize();
RcppExport SEXP RcppGP_finalize() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    finalize();
    return R_NilValue;
END_RCPP
}
// check_gpu_mem
void check_gpu_mem();
RcppExport SEXP RcppGP_check_gpu_mem() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    check_gpu_mem();
    return R_NilValue;
END_RCPP
}
// test_calc_cov
arma::mat test_calc_cov(Rcpp::List model, arma::mat d, arma::vec p);
RcppExport SEXP RcppGP_test_calc_cov(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    __result = Rcpp::wrap(test_calc_cov(model, d, p));
    return __result;
END_RCPP
}
// test_calc_chol_cov
arma::mat test_calc_chol_cov(Rcpp::List model, arma::mat d, arma::vec p);
RcppExport SEXP RcppGP_test_calc_chol_cov(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    __result = Rcpp::wrap(test_calc_chol_cov(model, d, p));
    return __result;
END_RCPP
}
// test_calc_cov_gpu
arma::mat test_calc_cov_gpu(Rcpp::List model, arma::mat d, arma::vec p);
RcppExport SEXP RcppGP_test_calc_cov_gpu(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    __result = Rcpp::wrap(test_calc_cov_gpu(model, d, p));
    return __result;
END_RCPP
}
// test_calc_inv_cov_gpu
arma::mat test_calc_inv_cov_gpu(Rcpp::List model, arma::mat d, arma::vec p);
RcppExport SEXP RcppGP_test_calc_inv_cov_gpu(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    __result = Rcpp::wrap(test_calc_inv_cov_gpu(model, d, p));
    return __result;
END_RCPP
}
// test_calc_chol_cov_gpu
arma::mat test_calc_chol_cov_gpu(Rcpp::List model, arma::mat d, arma::vec p);
RcppExport SEXP RcppGP_test_calc_chol_cov_gpu(SEXP modelSEXP, SEXP dSEXP, SEXP pSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::List >::type model(modelSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type d(dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type p(pSEXP);
    __result = Rcpp::wrap(test_calc_chol_cov_gpu(model, d, p));
    return __result;
END_RCPP
}
